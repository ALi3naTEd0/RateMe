name: Linux Build

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Version number'
        required: true
        type: string
        default: '1.0.0-1'
  workflow_call:
    inputs:
      version:
        required: true
        type: string

env:
  FLUTTER_VERSION: '3.19.3'

jobs:
  build:
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4

      - name: Install Dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            ninja-build \
            libgtk-3-dev \
            fuse \
            libfuse2
          
      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ env.FLUTTER_VERSION }}
          channel: 'stable'

      - name: Enable Linux
        run: flutter config --enable-linux-desktop

      - name: Build
        run: flutter build linux --release

      # AppImage build
      - name: Create AppImage Structure
        run: |
          mkdir -p AppDir
          cp -r build/linux/x64/release/bundle/* AppDir/
          cp assets/rateme.png AppDir/rateme.png
          
          cat > AppDir/AppRun << 'EOF'
          #!/bin/sh
          cd "$(dirname "$0")"
          exec ./rateme "$@"
          EOF
          chmod +x AppDir/AppRun
          
          cat > AppDir/rateme.desktop << EOF
          [Desktop Entry]
          Name=Rate Me
          Exec=rateme
          Icon=rateme
          Type=Application
          Categories=Audio;Music;
          EOF

      - name: Get AppImage Tool
        run: |
          wget https://github.com/AppImage/AppImageKit/releases/download/continuous/appimagetool-x86_64.AppImage
          chmod +x appimagetool-x86_64.AppImage

      - name: Build AppImage
        run: |
          # Ensure FUSE is loaded
          sudo modprobe fuse
          sudo chmod 666 /dev/fuse
          sudo chown root:$USER /dev/fuse
          
          ARCH=x86_64 ./appimagetool-x86_64.AppImage AppDir RateMe_${{ inputs.version || github.event.inputs.version }}.AppImage

      - name: Upload AppImage
        uses: actions/upload-artifact@v4
        with:
          name: RateMe-AppImage
          path: RateMe_${{ inputs.version || github.event.inputs.version }}.AppImage

      # DEB build
      - name: Build DEB Package
        run: |
          PKGDIR=RateMe_${{ inputs.version || github.event.inputs.version }}_amd64
          
          # Create directory structure
          mkdir -p $PKGDIR/DEBIAN
          mkdir -p $PKGDIR/usr/bin
          mkdir -p $PKGDIR/usr/lib/rateme
          mkdir -p $PKGDIR/usr/share/applications
          mkdir -p $PKGDIR/usr/share/icons/hicolor/256x256/apps
          
          # Copy files
          cp -r build/linux/x64/release/bundle/* $PKGDIR/usr/lib/rateme/
          cp assets/rateme.png $PKGDIR/usr/share/icons/hicolor/256x256/apps/rateme.png
          
          # Create launcher
          cat > $PKGDIR/usr/bin/rateme << 'EOF'
          #!/bin/sh
          cd /usr/lib/rateme
          exec ./rateme "$@"
          EOF
          chmod 755 $PKGDIR/usr/bin/rateme

          # Create control file
          cat > $PKGDIR/DEBIAN/control << EOF
          Package: rateme
          Version: ${{ inputs.version || github.event.inputs.version }}
          Architecture: amd64
          Maintainer: ALi3naTEd0 <eduardo.fortuny@outlook.com>
          Depends: libgtk-3-0, libsecret-1-0
          Section: utils
          Priority: optional
          Description: Rate your music albums
           A Flutter application for rating and organizing your music collection.
          EOF
          
          # Create desktop entry
          cat > $PKGDIR/usr/share/applications/rateme.desktop << EOF
          [Desktop Entry]
          Name=Rate Me
          Exec=/usr/bin/rateme
          Icon=rateme
          Type=Application
          Categories=Audio;Music;
          EOF
          chmod 644 $PKGDIR/usr/share/applications/rateme.desktop

          # Set permissions
          chmod 755 -R $PKGDIR/usr/lib/rateme
          
          # Build DEB
          dpkg-deb --build $PKGDIR

      - name: Upload DEB
        uses: actions/upload-artifact@v4
        with:
          name: RateMe-DEB
          path: RateMe_${{ inputs.version || github.event.inputs.version }}_amd64.deb

      # RPM build
      - name: Build RPM Package
        run: |
          # Install alien for DEB to RPM conversion
          sudo apt-get install -y alien rpm

          # Convert DEB to RPM and use consistent naming
          sudo alien --scripts --to-rpm RateMe_${{ inputs.version || github.event.inputs.version }}_amd64.deb
          # Rename from rateme-version to RateMe_version format
          find . -name "rateme-*.rpm" -exec mv {} RateMe_${{ inputs.version || github.event.inputs.version }}_x86_64.rpm \;

      - name: Upload RPM
        uses: actions/upload-artifact@v4
        with:
          name: RateMe-RPM
          path: RateMe_${{ inputs.version || github.event.inputs.version }}_x86_64.rpm