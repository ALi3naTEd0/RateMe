name: NixOS Package Build

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Version number'
        required: true
        type: string
        default: '1.0.3-1'
  release:
    types: [published]
  workflow_call:
    inputs:
      version:
        required: true
        type: string
        description: 'Version number'

jobs:
  build-nix-package:
    runs-on: ubuntu-latest
    name: Build NixOS Package
    steps:
      - uses: actions/checkout@v4

      - name: Install Dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            ninja-build \
            libgtk-3-dev \
            fuse \
            libfuse2

      - uses: cachix/install-nix-action@v26
        with:
          nix_path: nixpkgs=channel:nixos-unstable
      
      - uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.19.3'
          channel: 'stable'
          cache: true

      - name: Enable Linux
        run: flutter config --enable-linux-desktop

      - name: Build Flutter App
        run: |
          flutter pub get
          flutter build linux --release

      - name: Build NixOS Package
        id: build_package
        run: |
          # Set version based on event type
          if [ "$GITHUB_EVENT_NAME" = "workflow_dispatch" ]; then
            VERSION="$WORKFLOW_VERSION"
          elif [ "$GITHUB_EVENT_NAME" = "workflow_call" ]; then
            VERSION="$INPUT_VERSION"
          else
            # For releases
            VERSION="${GITHUB_REF#refs/tags/v}"
          fi
          echo "Using version: $VERSION"
          
          # Create build files
          mkdir -p build
          cat > build/default.nix << EOF
          { lib, stdenv, makeWrapper, gtk3, copyDesktopItems, makeDesktopItem }:

          stdenv.mkDerivation rec {
            pname = "rateme";
            version = "$VERSION";
            
            # ... content of file ...
          }
          EOF
          
          # ... create other files ...
          
          # Test build and create archive
          cd build
          nix-build release.nix -A rateme
          ARCHIVE_NAME="rateme-nixos-$VERSION.tar.gz"
          tar -czf "$ARCHIVE_NAME" *.nix *.sh *.md
          
          # Output paths for next steps - no special characters
          echo "ARCHIVE_FILE=$ARCHIVE_NAME" >> "$GITHUB_OUTPUT"
          echo "ARCHIVE_PATH=build/$ARCHIVE_NAME" >> "$GITHUB_OUTPUT"
        env:
          WORKFLOW_VERSION: ${{ github.event.inputs.version }}
          INPUT_VERSION: ${{ inputs.version }}
          GITHUB_EVENT_NAME: ${{ github.event_name }}
          GITHUB_REF: ${{ github.ref }}

      - name: Upload NixOS Package
        uses: actions/upload-artifact@v4
        with:
          name: rateme-nixos-package
          path: ${{ steps.build_package.outputs.ARCHIVE_PATH }}

      - name: Add to Release
        if: github.event_name == 'release'
        uses: softprops/action-gh-release@v1
        with:
          files: ${{ steps.build_package.outputs.ARCHIVE_PATH }}
