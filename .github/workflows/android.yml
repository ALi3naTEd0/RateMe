name: Android Build

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Version number'
        required: true
        type: string
        default: '1.0.0-1'
  workflow_call:
    inputs:
      version:
        required: true
        type: string
        description: 'Version number'

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'
          cache: 'gradle'

      - name: Verify Java installation
        run: |
          echo "Java version:"
          java -version
          echo "JAVA_HOME:"
          echo $JAVA_HOME
          ls -la $JAVA_HOME

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.19.3'
          channel: 'stable'
          cache: true

      - name: Decode Keystore
        run: |
          echo "${{ secrets.UPLOAD_KEYSTORE }}" | tr -d '\n' | base64 -d > android/app/upload-keystore.jks

      - name: Configure Signing
        run: |
          echo "storeFile=upload-keystore.jks" > android/key.properties
          echo "storePassword=${{ secrets.KEYSTORE_PASSWORD }}" >> android/key.properties
          echo "keyAlias=${{ secrets.KEY_ALIAS }}" >> android/key.properties
          echo "keyPassword=${{ secrets.KEY_PASSWORD }}" >> android/key.properties

      - name: Download Icons
        run: |
          mkdir -p assets
          curl -o assets/app-icon.png https://raw.githubusercontent.com/ALi3naTEd0/RateMe/rateme/assets/rateme.png
          curl -o assets/rateme.png https://raw.githubusercontent.com/ALi3naTEd0/RateMe/rateme/assets/rateme.png

      - name: Configure Gradle
        run: |
          mkdir -p $HOME/.gradle
          echo "org.gradle.java.home=$JAVA_HOME" >> $HOME/.gradle/gradle.properties
          echo "Current gradle.properties:"
          cat $HOME/.gradle/gradle.properties

      - uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
            ~/.android/cache
          key: gradle-android-${{ runner.os }}-${{ hashFiles('**/*.gradle*', '**/*.properties', 'pubspec.yaml') }}-${{ github.sha }}
          restore-keys: |
            gradle-android-${{ runner.os }}-${{ hashFiles('**/*.gradle*', '**/*.properties', 'pubspec.yaml') }}-
            gradle-android-${{ runner.os }}-

      # First build universal APK
      - name: Build Universal APK
        run: |
          flutter pub get
          flutter build apk --release
          mv build/app/outputs/flutter-apk/app-release.apk build/app/outputs/flutter-apk/RateMe_${{ inputs.version || github.event.inputs.version }}.apk
          
      # Then build ABI-specific APKs
      - name: Build Split APKs
        run: |
          flutter build apk --release --split-per-abi
          mv build/app/outputs/flutter-apk/app-arm64-v8a-release.apk build/app/outputs/flutter-apk/RateMe_${{ inputs.version || github.event.inputs.version }}_arm64-v8a.apk
          mv build/app/outputs/flutter-apk/app-armeabi-v7a-release.apk build/app/outputs/flutter-apk/RateMe_${{ inputs.version || github.event.inputs.version }}_armeabi-v7a.apk
          mv build/app/outputs/flutter-apk/app-x86_64-release.apk build/app/outputs/flutter-apk/RateMe_${{ inputs.version || github.event.inputs.version }}_x86_64.apk

      - name: Build APK
        run: |
          flutter build apk --release --split-per-abi
          
          # Verify package ID
          PACKAGE_ID=$(aapt dump badging build/app/outputs/flutter-apk/app-arm64-v8a-release.apk | grep package | awk '{print $2}' | sed "s/name='\([^']*\)'.*/\1/")
          echo "Package ID: $PACKAGE_ID"
          [ "$PACKAGE_ID" = "com.ali3nated0.rateme" ] || exit 1

      - name: Upload Universal APK
        uses: actions/upload-artifact@v4
        with:
          name: RateMe-universal
          path: build/app/outputs/flutter-apk/RateMe_${{ inputs.version || github.event.inputs.version }}.apk
          
      - name: Upload arm64-v8a APK
        uses: actions/upload-artifact@v4
        with:
          name: RateMe-arm64-v8a
          path: build/app/outputs/flutter-apk/RateMe_${{ inputs.version || github.event.inputs.version }}_arm64-v8a.apk

      - name: Upload armeabi-v7a APK
        uses: actions/upload-artifact@v4
        with:
          name: RateMe-armeabi-v7a
          path: build/app/outputs/flutter-apk/RateMe_${{ inputs.version || github.event.inputs.version }}_armeabi-v7a.apk

      - name: Upload x86_64 APK
        uses: actions/upload-artifact@v4
        with:
          name: RateMe-x86_64
          path: build/app/outputs/flutter-apk/RateMe_${{ inputs.version || github.event.inputs.version }}_x86_64.apk
