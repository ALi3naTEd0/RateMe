name: Tag Release

# This workflow runs ONLY when a tag is pushed
on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write

jobs:
  release:
    name: Create Release and Update Docs
    runs-on: ubuntu-latest
    steps:
      # Step 1: Debug information
      - name: Debug Tag Event
        run: |
          echo "Tag being processed: ${{ github.ref }}"
          echo "Event type: ${{ github.event_name }}"

      # Step 2: Checkout code
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Full history for changelog
          ref: rateme     # Main branch

      # Step 3: Get version from tag
      - name: Extract Version
        id: get_version
        run: echo "VERSION=${GITHUB_REF#refs/tags/v}" >> $GITHUB_OUTPUT

      # Step 4: Create the release
      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release v${{ steps.get_version.outputs.VERSION }}
          draft: false
          prerelease: false

      # Step 5: Update documentation
      - name: Update Documentation
        run: |
          # Get variables
          VERSION=${{ steps.get_version.outputs.VERSION }}
          RELEASE_URL="${{ steps.create_release.outputs.html_url }}"
          RELEASE_DATE=$(date +"%Y-%m-%d")
          
          echo "Updating documentation for version $VERSION"
          
          # Update file URLs and version numbers
          sed -i "s|/download/v[0-9]\+\.[0-9]\+\.[0-9]\+-[0-9]\+/|/download/v${VERSION}/|g" README.md
          sed -i "s|RateMe_[0-9]\+\.[0-9]\+\.[0-9]\+-[0-9]\+|RateMe_${VERSION}|g" README.md
          
          # Update CHANGELOG
          sed -i "/## \[Unreleased\]/,/## \[/c\## [Unreleased]\n\n## [$VERSION] - $RELEASE_DATE" CHANGELOG.md
          
          # Show changes (for debugging)
          echo "Changes in README:"
          git diff README.md
          
          echo "Changes in CHANGELOG:"
          git diff CHANGELOG.md
          
          # Commit changes
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          git add README.md CHANGELOG.md
          git commit -m "docs: update to version ${VERSION}" || echo "No changes to commit"
          git push || echo "No changes to push"
          
      # Step 6: Update website if docs directory exists
      - name: Update Website
        run: |
          VERSION=${{ steps.get_version.outputs.VERSION }}
          
          if [ -d "docs" ]; then
            cd docs
            
            # Update version numbers
            sed -i "s|/download/v[0-9]\+\.[0-9]\+\.[0-9]\+-[0-9]\+/|/download/v${VERSION}/|g" index.html
            sed -i "s|RateMe_[0-9]\+\.[0-9]\+\.[0-9]\+-[0-9]\+|RateMe_${VERSION}|g" index.html
            sed -i "s|Version [0-9]\+\.[0-9]\+\.[0-9]\+-[0-9]\+|Version ${VERSION}|g" index.html
            
            # Commit changes
            git add index.html
            git commit -m "docs: update website to version ${VERSION}" || echo "No changes to website"
            git push || echo "No website changes to push"
          else
            echo "Docs directory not found, skipping website update"
          fi
