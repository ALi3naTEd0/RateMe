plugins {
    id "com.android.application"
    id "kotlin-android"
    // The Flutter Gradle Plugin must be applied after the Android and Kotlin Gradle plugins.
    id "dev.flutter.flutter-gradle-plugin"
}

def keystorePropertiesFile = rootProject.file('key.properties')
def keystoreProperties = new Properties()
if (keystorePropertiesFile.exists()) {
    keystoreProperties.load(new FileInputStream(keystorePropertiesFile))
    println "Keystore properties loaded successfully"
} else {
    println "Warning: key.properties file not found!"
}

android {
    namespace = "com.alienated.rateme"
    compileSdkVersion flutter.compileSdkVersion
    ndkVersion "25.1.8937393"

    compileOptions {
        sourceCompatibility = JavaVersion.VERSION_17
        targetCompatibility = JavaVersion.VERSION_17
    }

    kotlinOptions {
        jvmTarget = '17'
    }

    defaultConfig {
        applicationId "com.alienated.rateme"
        minSdkVersion 21
        targetSdkVersion 33
        versionCode 1
        versionName "1.0.1"
        // Add application name
        resValue "string", "app_name", "Rate Me!"
    }

    signingConfigs {
        if (keystorePropertiesFile.exists()) {
            release {
                keyAlias keystoreProperties['keyAlias']
                keyPassword keystoreProperties['keyPassword']
                storeFile keystoreProperties['storeFile'] ? file(keystoreProperties['storeFile']) : null
                storePassword keystoreProperties['storePassword']
            }
        }
    }

    buildTypes {
        release {
            if (keystorePropertiesFile.exists()) {
                signingConfig signingConfigs.release
                println "Release build using signing config"
            } else {
                signingConfig signingConfigs.debug
                println "Release build using debug signing config"
            }
            minifyEnabled false
            shrinkResources false
        }
    }
}

flutter {
    source = "../.."
}
